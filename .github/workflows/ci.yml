name: CI

on: push

env:
  node-version: 14

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Extract tag name
      id: tag
      uses: olegtarasov/get-tag@v2.1
      with:
        tagRegex: "v(?<version>.*)"

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn

    - name: Set version
      if: startsWith( github.ref, 'refs/tags/')
      run: |
        yarn version --new-version ${{ steps.tag.outputs.version }}

    - name: Typsecript build
      run: yarn tsc

    - name: Package
      run: |
        yarn run publish --dry-run

    - uses: actions/cache@v1
      with:
        path: out
        key: out-${{ github.sha }}

  publish:
    needs: [build]
    if: startsWith( github.ref, 'refs/tags/')
    uses: lmolinier/draw-exporter/.github/workflows/release.yml@main