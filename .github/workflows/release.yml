on:
  workflow_call:

name: Release

jobs:
  publish:
    runs-on: ${{ matrix.image }}

    strategy:
      matrix:
        platform: ["linux", "win32", "macos"]
        include: 
        - platform: linux
          image: ubuntu-latest
        - platform: win32
          image: windows-latest
        - platform: macos
          image: macos-latest
      fail-fast: false

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-

    - uses: actions/cache@v1
      id: out-cache # use this to check for `cache-hit` (`steps.out-cache.outputs.cache-hit != 'true'`)
      with:
        path: out
        key: out-${{ matrix.platform }}-${{ github.run_number }}

    - name: Install dependencies
      run: yarn

    - name: Run typescript
      run: yarn build

    - name: Publish
      if: ${{ steps.out-cache.outputs.cache-hit }} == 'true'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        yarn run publish --from-dry-run

  create:
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        bodyFile: "CHANGES.md"
        token: ${{ secrets.GITHUB_TOKEN }}